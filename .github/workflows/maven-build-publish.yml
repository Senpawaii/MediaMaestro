name: Java Maven Multi-Module Build & Publish

on:
  push:
    branches:
      - '**'  # This will trigger the workflow on push to any branch
  pull_request:
    branches: [ "master" ]

env:
  JAVA_VERSION: '21'
  JAVA_DISTRIBUTION: 'temurin'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: maven
          settings-path: ${{ github.workspace }}

      - name: Build with Maven
        run: cd backend && mvn -B package --file pom.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  publish-job:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
      - name: Package artifacts
        run: |
          cd backend
          mvn -B clean package -DskipTests
          mkdir -p staging
          find . -name '*.jar' -not -name '*-sources.jar' -not -name '*-javadoc.jar' -exec cp {} staging/ \;
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Package
          path: backend/staging

#  docker:
#    needs: publish
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#      - name: Login to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#      - name: Build and push
#        uses: docker/build-push-action@v5
#        with:
#          context: .
#          file: ./Dockerfile
#          push: true
#          tags: yourdockerhubusername/mediamaestro:latest